(global-linum-mode)

(setq js2-basic-offset 2)
(setq js-indent-level 2)
(setq default-tab-width 2)

;(load-file "/apps/emacs_setup/files/multi-term.elc")
;(setq multi-term-program "/bin/fish")
(setq shell-file-name "/bin/fish")
(ansi-color-for-comint-mode-on)
;(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)
;(load-file "/apps/emacs_setup/files/whitespace.elc")

(define-key evil-motion-state-map (kbd "C-i") 'evil-jump-forward)
;; (spacemacs/toggle-truncate-lines-off)
;(add-to-list 'custom-theme-load-path "/apps/emacs_setup/files/themes")


;; Set a custom background for theme 'spacemacs-dark:
(if (eq (car dotspacemacs-themes) 'spacemacs-dark)
 (if (eq (window-system) 'x)
  (progn
    ;; (set-face-foreground 'helm-selection "#222226")
    ;; (set-face-background 'helm-selection "#EEAD0E")
    ;; The following was generated by Emacs interactively
    ;; using list-faces-display
    (custom-set-faces
     '(helm-selection ((t (:background "#EEAD0E" :foreground "#222226"))))
     )
  ) ;; progn
 ) ;; if x
) ;; if spacemacs-dark

(if (eq (car dotspacemacs-themes) 'leuven)
 (if (eq (window-system) 'x)

  (progn
    (setq dotspacemacs-colorize-cursor-according-to-state nil)
    (set-face-background 'hl-line "#FFFFFF")
    (custom-set-faces
      '(default ((t (:background "#F7F7F7" ))))
      '(cursor ((t (:background "#4070B6"))))
      '(font-lock-keyword-face ((t (:foreground "DeepSkyBlue2" :weight bold))))
    ) ;; custom-set-faces
  ) ;; progn

  (custom-set-faces
  '(default
     ((t (:background "color-255" )))
     )
  ) ;; custom-set-faces
  ;; Set ccolor of current line:
  ;; (set-face-background 'hl-line "#CECECE")
  ;; Keep syntax highlighting in the current line:
  ;; (set-face-foreground 'highlight nil)
  ) ;; if
) ;; if

;; (call-interactively 'helm-M-x)
;; Preload some libs at the cost of startup time:
(require 'helm-command)
;(color-theme-approximate-on)
  ;(custom-theme-set-faces
    ;'leuven
    ;'(cursor ((,class (:background "#21BDFF"))))
    ;)
(tool-bar-mode)

;; Auto save settings:
(setq backup-directory-alist
      `((".*" . ,"/apps/emacs_setup/tmp")))
(setq auto-save-file-name-transforms
      `((".*" ,"/apps/emacs_setup/tmp" t)))


(defun fish_shell ()
  (interactive)
  (split-window-vertically)
  (ansi-term "fish")
  )
